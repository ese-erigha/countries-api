version: '3.7'

services:
  flask_api:
    build:
      context:  ./services/flask
      dockerfile: Dockerfile
    container_name: flask_api # Do not use when in a swarm; cannot scale a service beyond 1 container if you have specified a custom name
    volumes:
      - ./services/flask/:/usr/src/app/
    ports:
      - "5000:5000"
    env_file:
      - ./.env.dev
    depends_on:
      - mongodb
      - elasticsearch
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - backend

  nginx:
    container_name: nginx
    build:
      context:  ./services/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - flask_api
    networks:
      - frontend
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9205:9200" #only accessible within the host; cannot be accessed publicly
      - "9305:9300"
    networks:
      - backend

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    ports:
      - 5605:5601
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  esdata:
    driver: local
  mongodb_data:
    driver: local

